name: Deploy MusicScene Site

on:
  workflow_dispatch:
  push:
    branches: [master]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2

      - name: Deploy Certificate (us-east-1)
        run: |
          aws cloudformation deploy \
            --stack-name musicscene-certificate \
            --template-file infrastructure/cert-us-east-1.yaml \
            --parameter-overrides DomainName=musicscene.com.au \
            --capabilities CAPABILITY_NAMED_IAM \
            --region us-east-1

      - name: Retrieve Certificate ARN
        id: cert
        run: |
          echo "::set-output name=arn::$(aws cloudformation describe-stacks \
            --stack-name musicscene-certificate --region us-east-1 \
            --query \"Stacks[0].Outputs[?OutputKey=='CertificateArn'].OutputValue\" \
            --output text)"

      - name: Deploy Main Stack (ap-southeast-2)
        run: |
          aws cloudformation deploy \
            --stack-name musicscene-static-site \
            --template-file infrastructure/musicscene-static-site.yaml \
            --parameter-overrides DomainName=musicscene.com.au CertificateArn=${{ steps.cert.outputs.arn }} \
            --capabilities CAPABILITY_NAMED_IAM \
            --region ap-southeast-2

      - name: Build site
        run: |
          npm ci
          npm run build
          npm run export || true

      - name: Sync to S3
        run: |
          aws s3 sync ./out s3://musicscene.com.au --delete
