AWSTemplateFormatVersion: '2010-09-09'
Description: |
  Static‑site stack for musicscene.com.au:
  • Route 53 Hosted Zone
  • S3 bucket (website hosting, public)
  • CloudFront distribution (PriceClass_200)
  • DNS A‑alias record

Parameters:
  DomainName:
    Type: String
    Default: musicscene.com.au
    Description: The domain to host (must match your registrar)

Resources:

  # 1) Route 53 Hosted Zone
  HostedZone:
    Type: AWS::Route53::HostedZone
    Properties:
      Name: !Ref DomainName

  # 2) S3 Bucket for website
  WebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref DomainName
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html

  # 3) Public‑read bucket policy (runs after bucket exists)
  WebsiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    DependsOn: WebsiteBucket
    Properties:
      Bucket: !Ref WebsiteBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: PublicReadGetObject
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource:
              Fn::Join:
                - ''
                - - 'arn:aws:s3:::'
                  - Ref: DomainName
                  - '/*'

  # 4) CloudFront Origin Access Identity
  CloudFrontOAI:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub 'OAI for ${DomainName}'

  # 5) CloudFront Distribution (waits for bucket & policy & OAI)
  WebsiteDistribution:
    Type: AWS::CloudFront::Distribution
    DependsOn:
      - WebsiteBucket
      - WebsiteBucketPolicy
      - CloudFrontOAI
    Properties:
      DistributionConfig:
        Enabled: true
        DefaultRootObject: index.html
        Origins:
          - Id: S3Origin
            DomainName: !GetAtt WebsiteBucket.DomainName    # <- uses the actual bucket REST endpoint
            S3OriginConfig:
              OriginAccessIdentity: !Sub 'origin-access-identity/cloudfront/${CloudFrontOAI}'
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods: ['GET','HEAD']
          CachedMethods: ['GET','HEAD']
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
        ViewerCertificate:
          CloudFrontDefaultCertificate: true
        PriceClass: PriceClass_200

  # 6) DNS A‑alias record in the new hosted zone
  DNSRecord:
    Type: AWS::Route53::RecordSet
    DependsOn: WebsiteDistribution
    Properties:
      HostedZoneId: !Ref HostedZone
      Name: !Ref DomainName
      Type: A
      AliasTarget:
        DNSName: !GetAtt WebsiteDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2  # CloudFront global zone ID

Outputs:
  HostedZoneId:
    Description: The Route 53 Hosted Zone ID
    Value: !Ref HostedZone

  S3BucketName:
    Description: The S3 bucket for static content
    Value: !Ref WebsiteBucket

  WebsiteURL:
    Description: S3 website endpoint (http)
    Value: !GetAtt WebsiteBucket.WebsiteURL

  CloudFrontURL:
    Description: CloudFront domain (https)
    Value: !GetAtt WebsiteDistribution.DomainName
