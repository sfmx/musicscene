AWSTemplateFormatVersion: '2010-09-09'
Description: |
  Static-site stack for musicscene.com.au:
  • S3 bucket (website hosting, public)
  • Route 53 hosted zone
  • ACM certificate (DNS validation)
  • CloudFront OAC + distribution (PriceClass_200)
  • Security headers policy
  • DNS A‑alias record

Parameters:
  DomainName:
    Type: String
    Default: musicscene.com.au
    Description: The domain to host (must match your registrar)
  BucketName:
    Description: 'Name of the S3 bucket (must be globally unique)'
    Type: String
    Default: 'musicscene'   


Resources:
  # 1) S3 bucket for static website
  S3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain

  # 2) Public‑read bucket policy
  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    DependsOn: S3Bucket
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Id: MusicSceneBucketPolicy
        Version: '2012-10-17'
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource:
              Fn::Join:
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref S3Bucket
                  - '/*'

  # 3) Route 53 Hosted Zone
  HostedZone:
    Type: AWS::Route53::HostedZone
    Properties:
      Name: !Ref DomainName

  # 4) ACM Certificate (DNS validation)
  Certificate:
    Type: AWS::CertificateManager::Certificate
    DependsOn: HostedZone
    Properties:
      DomainName: !Ref DomainName
      ValidationMethod: DNS
      DomainValidationOptions:
        - DomainName: !Ref DomainName
          HostedZoneId: !Ref HostedZone

  # 5) CloudFront Origin Access Control
  CloudFrontOAC:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Name: !Sub '${DomainName}-OAC'
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4

  # 6) Security Headers Policy
  SecurityHeaders:
    Type: AWS::CloudFront::ResponseHeadersPolicy
    Properties:
      ResponseHeadersPolicyConfig:
        Name: !Sub '${DomainName}-SecurityHeaders'
        SecurityHeadersConfig:
          ContentSecurityPolicy:
            Override: true
            ContentSecurityPolicy: "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline';"
          StrictTransportSecurity:
            Override: true
            AccessControlMaxAgeSec: 63072000
            IncludeSubdomains: true
            Preload: true
          XSSProtection:
            Override: true
            Protection: true
            ModeBlock: true
          ReferrerPolicy:
            Override: true
            ReferrerPolicy: strict-origin-when-cross-origin

  # 7) CloudFront Distribution
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    DependsOn:
      - BucketPolicy
      - CloudFrontOAC
      - Certificate
    Properties:
      DistributionConfig:
        Enabled: true
        DefaultRootObject: index.html
        Origins:
          - Id: S3Origin
            DomainName: !GetAtt S3Bucket.RegionalDomainName
            OriginAccessControlId: !GetAtt CloudFrontOAC.Id
            S3OriginConfig: {}
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods: ['GET','HEAD']
          CachedMethods: ['GET','HEAD']
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
          ResponseHeadersPolicyId: !Ref SecurityHeaders
        ViewerCertificate:
          AcmCertificateArn: !Ref Certificate
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2021
        Aliases:
          - !Ref DomainName
        PriceClass: PriceClass_200
        CustomErrorResponses:
          - ErrorCode: 404
            ResponseCode: 404
            ResponsePagePath: /404.html
          - ErrorCode: 403
            ResponseCode: 404
            ResponsePagePath: /404.html

  # 8) Route 53 A‑Alias Record to CloudFront
  DNSRecord:
    Type: AWS::Route53::RecordSet
    DependsOn: CloudFrontDistribution
    Properties:
      HostedZoneId: !Ref HostedZone
      Name: !Ref DomainName
      Type: A
      AliasTarget:
        DNSName: !GetAtt CloudFrontDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2  # CloudFront global zone ID

Outputs:
  BucketName:
    Description: The S3 bucket name
    Value: !Ref S3Bucket

  WebsiteURL:
    Description: HTTP site endpoint
    Value: !GetAtt S3Bucket.WebsiteURL

  DistributionDomain:
    Description: CloudFront domain name
    Value: !GetAtt CloudFrontDistribution.DomainName

  CertificateArn:
    Description: ACM certificate ARN
    Value: !Ref Certificate
